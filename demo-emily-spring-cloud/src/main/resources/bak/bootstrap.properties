spring.application.name=@project.name@
#spring.profiles.include=${spring.profiles.active:dev}/server,${spring.profiles.active:dev}/redis
spring.cloud.consul.config.enabled=true
spring.cloud.consul.config.prefixes=@project.name@
spring.cloud.consul.config.default-context=@project.version@
spring.cloud.consul.config.profile-separator=/
spring.cloud.consul.config.format=properties
spring.cloud.consul.config.data-key=data
# ACL TOKEN
spring.cloud.consul.config.acl-token=7e9b1b50-c5b8-d786-c4f2-42c0155a7e1e
# 配置中心配置
# 检测配置中心文件变动，默认：true
spring.cloud.consul.config.watch.enabled=true
# 等待（或阻塞）监视查询的秒数，默认：55秒
spring.cloud.consul.config.watch.wait-time=55
# 监视延迟的固定时间，默认：1000毫秒
spring.cloud.consul.config.watch.delay=1000
# 是否开启consul重试, 默认：true
spring.cloud.consul.retry.enabled=true
# 初始重试间隔（毫秒）,默认：1000
spring.cloud.consul.retry.initial-interval=1000
# 最大间隔，默认：2000
spring.cloud.consul.retry.max-interval=2000
# 最大尝试次数，默认：6
spring.cloud.consul.retry.max-attempts=5
# 下一个间隔的乘数，默认：1.1
spring.cloud.consul.retry.multiplier=1.1
# 启用服务注册功能，默认：true
spring.cloud.service-registry.enabled=true
# 服务是否启动自动注册，默认：true
spring.cloud.service-registry.auto-registration.enabled=true
# 是否将管理(management)注册为服务(即actuator监控服务)，默认：true
spring.cloud.service-registry.auto-registration.register-management=true
# 如果AutoServiceRegistration不存在，是否启动失败，默认：false
spring.cloud.service-registry.auto-registration.fail-fast=false
# 服务发现配置
# consul服务器地址
spring.cloud.consul.host=172.30.67.122
# consul端口号
spring.cloud.consul.port=8500
# 启用服务发现，默认：true
spring.cloud.consul.discovery.enabled=true
# 启用服务注册，默认：true
spring.cloud.consul.discovery.register=true
# 注册协议为HTTP或HTTPS，默认:http
spring.cloud.consul.discovery.scheme=https
# 服务停止时是否自动取消注册，默认：true
spring.cloud.consul.discovery.deregister=true
# 表示注册服务时使用IP而不是hostname，默认：false
spring.cloud.consul.discovery.prefer-ip-address=true
# 访问服务时要使用的IP地址（还必须设置要使用的prefer-ip-address为true）--使用docker时设置
spring.cloud.consul.discovery.ip-address=172.30.67.122
# 注册服务的端口（默认为监听端口）--使用docker时设置
spring.cloud.consul.discovery.port=9000
# 实例ID(唯一标识)，默认是：${spring.application.name}:comma,separated,profiles:${server.port}
spring.cloud.consul.discovery.instance-id=${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
# ACL TOKEN
spring.cloud.consul.discovery.acl-token=7e9b1b50-c5b8-d786-c4f2-42c0155a7e1e
# 服务实例-后缀
spring.cloud.consul.discovery.management-suffix=management
# 注册服务时要使用的标记
spring.cloud.consul.discovery.tags=emily=小米粒
# 注册健康检查服务，在服务开发过程中很有用，默认：true
spring.cloud.consul.discovery.register-health-check=true
# 健康检查路径，默认：/actuator/health
spring.cloud.consul.discovery.health-check-path=/actuator/health
# 健康检查时间间隔，默认：10s
spring.cloud.consul.discovery.health-check-interval=10s
# 健康检查超时时间，默认：10s
spring.cloud.consul.discovery.health-check-timeout=10s
# 健康检查失败多长时间后取消注册，默认null(需要consul版本大于7.x)
spring.cloud.consul.discovery.health-check-critical-timeout=60s
# 如果为true,则在服务检查期间跳过证书验证，否则运行证书验证
spring.cloud.consul.discovery.health-check-tls-skip-verify=true
# 是否启用目录监视程序，默认：true
spring.cloud.consul.discovery.catalog-services-watch.enabled=true
# 检查目录的延迟时间，默认：1000ms
spring.cloud.consul.discovery.catalog-services-watch-delay=1000
# 检查consul目录的超时时间，默认：2s
spring.cloud.consul.discovery.catalog-services-watch-timeout=2
# 开启心跳，默认：false (心跳检查和健康检查不可同时启用)
spring.cloud.consul.discovery.heartbeat.enabled=false
# 心跳超时单位，默认：s
spring.cloud.consul.discovery.heartbeat.ttl-unit=s
# 心跳超时时间，默认：30
spring.cloud.consul.discovery.heartbeat.ttl-value=30
# 心跳间隔，默认：2.0 / 3.0
spring.cloud.consul.discovery.heartbeat.interval-ratio=0.7
# 启用Ribbon负载均衡策略，默认：true
spring.cloud.loadbalancer.ribbon.enabled=true
# 负载均衡重试机制
#开启重试机制，默认：true
spring.cloud.loadbalancer.retry.enabled=true
# <clientName>.<nameSpace>.<propertyName>=<value>
# 对当前实例的重试次数 (不包含第一次尝试),默认：0
CONSUL-DEMO.ribbon.MaxAutoRetries=1
# 切换实例的最大次数(不包含第一个实例)，默认：1
CONSUL-DEMO.ribbon.MaxAutoRetriesNextServer=1
# 对所有的操作都进行重试，默认：false（true对所有的异常都重试、false只对连接异常重试、Get&&false 只对连接异常重试）
CONSUL-DEMO.ribbon.OkToRetryOnAllOperations=true
# Interval to refresh the server list from the source
#CONSUL-DEMO.ribbon.ServerListRefreshInterval=2000
# Apache HttpClient连接超时时间(RestTemplate结合不起作用，会被覆盖)
#CONSUL-DEMO.ribbon.ConnectTimeout=250
# Apache HttpClient读取超时时间(RestTemplate结合不起作用，会被覆盖)
#CONSUL-DEMO.ribbon.ReadTimeout=100
# Initial list of servers, can be changed via Archaius dynamic property at runtime
#CONSUL-DEMO.ribbon.listOfServers=www.microsoft.com:80,www.yahoo.com:80,www.google.com:80
# 修改负载均衡客户端的日志级别
logging.level.org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration=error