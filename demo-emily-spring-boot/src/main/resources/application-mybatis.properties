#是否开启mybatis拦截组件, 默认：true
spring.emily.mybatis.enabled=true
#是否拦截超类或者接口中的方法，默认：true
spring.emily.mybatis.check-inherited=true

#Mybatis mapper文件位置（Locations of MyBatis mapper files.）
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
#是否验证Mybatis xml配置文件存在，默认：false
mybatis.check-config-location=false
#Mybatis xml配置文件位置（Location of MyBatis xml config file）
#mybatis.config-location=classpath:mybatis/mybatis-config.xml
#允许JDBC支持自动生成主键，需要驱动兼容。如果设置为true,则这个设置强制使用自动申城主键，尽管一些驱动不能兼容，但认可正常工作（如：Derby）,默认：false
mybatis.configuration.use-generated-keys=false
#Mybatis利用本地缓存机制防止循环引用和加速重复查询，默认值为SESSION,这种情况下会缓存一个会话中执行的所有查询，
#若设置为STATEMENT,本地会话仅用在语句执行上，对相同SqlSession的不同调用将不会共享，默认：session
mybatis.configuration.local-cache-scope=session
#是否开启Mapper缓存，即二级缓存，默认：true
mybatis.configuration.cache-enabled=true
#延迟加载的全局开关，当开启时，所有关联对象都会延迟加载，特定关联关系中客通过设置fetchType属性来覆盖该项的开关状态，默认：false
mybatis.configuration.lazy-loading-enabled=false
#当开启时，任何方法的调用都会加载该对象的所有属性，否则，每个属性会按需加载，默认：false
mybatis.configuration.aggressive-lazy-loading=false
#是否允许单一语句返回多结果集（需JDBC驱动支持），默认：true
mybatis.configuration.multiple-result-sets-enabled=true
#使用列标签代替列名，不同的驱动在这方面会有不同的表现，具体可以参考JDBC驱动相关文档，默认：true
mybatis.configuration.use-column-label=true
#指定Mybatis应如何自动映射列到Java实体属性。NONE表示取消自动映射,PARTIAL只会自动映射
#没有定义嵌套结果集映射的结果集，FULL会自动映射任意复杂的结果集（无论是否嵌套），默认：partial
mybatis.configuration.auto-mapping-behavior=partial
#指定发现自动映射目标未知列（或未知属性）的行为，NONE不做任何反应，WARNING输出提醒日志，FAILING映射失败，抛出SQLSessionException异常，默认：NONE
mybatis.configuration.auto-mapping-unknown-column-behavior=none
#配置默认的Executor类型，SIMPLE就是普通的Executor;REUSE执行器会复用Statement对象；BATCH会批量更新所有更新语句；默认：SIMPLE
mybatis.configuration.default-executor-type=simple
#设置超时时间，它决定驱动等待数据库响应的秒数，默认未设置为null
mybatis.configuration.default-statement-timeout=
#默认的FetchSize,用于设置Statement对象的fetchSize属性，用于限制从数据库中获取数据的最大行数，默认为null,默认值由具体驱动决定
mybatis.configuration.default-fetch-size=
#允许在嵌套语句中使用分页（RowBounds）。如果允许使用，则设置为false
mybatis.configuration.safe-row-bounds-enabled=false
#允许在嵌套语句中使用分页（ResultHandler）,如果允许使用，则设置为false,默认：true
mybatis.configuration.safe-result-handler-enabled=true
#是否开启自动驼峰命名规则映射，即从经典数据库列名A_COLUMN到经典Java属性名aColumn的映射，默认：false
mybatis.configuration.map-underscore-to-camel-case=false
#当没有为参数指定JDBC类型时，指定JDBC类型的值为null。一些驱动需要指定JDBC类型，多数情况下用一般类型即可，比如NULL、VARCHAR和OTHER 默认：other
mybatis.configuration.jdbc-type-for-null=other
#指定那个对象的方法延迟加载一次，默认：equals、clone、hashCode、toString
mybatis.configuration.lazy-load-trigger-methods=equals,clone,hashCode,toString
#指定动态SQL生成的默认语言，默认：org.apache.ibatis.scripting.xmltags.XMLLanguageDriver
mybatis.default-scripting-language-driver=org.apache.ibatis.scripting.xmltags.XMLLanguageDriver
#指定Java中枚举类型使用的默认TypeHandler，默认：org.apache.ibatis.type.EnumTypeHandler
mybatis.configuration.default-enum-type-handler=org.apache.ibatis.type.EnumTypeHandler
#指定当结果集中的值为null的时候是否调用映射对象的Setter方法，这对于有Map.keySet依赖或null值初始化
#的时候是有用的，注意基本类型（int、boolean等）是不能设置成nll的。
mybatis.configuration.call-setters-on-nulls=false
#当返回行的所有列都是空时，Mybatis默认返回null,当开启这个设置时，Mybatis会返回一个空实例。
#请注意，也适用于嵌套的结果集（collection、association）
mybatis.configuration.return-instance-for-empty-row=false
#指定Mybatis增加到日志名称的前缀，默认：未设置
mybatis.configuration.log-prefix=
#指定Mybatis所用日志的具体实现类，未指定自动查找
mybatis.configuration.log-impl=com.emily.infrastructure.mybatis.log.LogBackImpl
#指定Mybatis创建具有延迟加载能力的对象所用到的代理工具（CGLIB、JAVASSIST），默认：JAVASSIST（未指定）
#mybatis.configuration.proxy-factory=
#指定VFS的实现，默认未设置
mybatis.configuration.vfs-impl=
#允许使用方法签名中的名称作为语句参数名称，为了使用该特性，你的工程必须采用
#JAVA8编译，并且加上-parameters选项
mybatis.configuration.use-actual-param-name=true
#指定一个提供Configuration实例的类，这个被返回的Configuration实例用来加载被反序列化对象的懒加载属性，默认：未设置
mybatis.configuration.configuration-factory=



